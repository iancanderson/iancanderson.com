{"pageProps":{"post":{"title":"My Next.js blog","date":"2022-02-03T12:00:00.000Z","slug":"my-nextjs-powered-blog","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    code: \"code\"\n  }, _provideComponents(), props.components), {Counter} = _components;\n  if (!Counter) _missingMdxReference(\"Counter\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      children: \"Before\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"My \", _jsx(_components.a, {\n        href: \"https://iancanderson.github.io\",\n        children: \"previous website\"\n      }), \" was a static site built with \", _jsx(_components.a, {\n        href: \"https://jekyllrb.com/\",\n        children: \"Jekyll\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It worked just fine.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Now\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I wanted to play with a modern stack.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The site you're viewing now is powered by\\n\", _jsx(_components.a, {\n        href: \"https://nextjs.org/\",\n        children: \"Next.js\"\n      }), \",\\n\", _jsx(_components.a, {\n        href: \"https://tailwindcss.com/\",\n        children: \"TailwindCSS\"\n      }), \",\\n\", _jsx(_components.a, {\n        href: \"https://www.typescriptlang.org/\",\n        children: \"TypeScript\"\n      }), \", and\\n\", _jsx(_components.a, {\n        href: \"https://mdxjs.com/\",\n        children: \"MDX\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"It's still a statically-generated site and it's deployed via \", _jsx(_components.a, {\n        href: \"https://pages.github.com/\",\n        children: \"GitHub Pages\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"MDX\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I think \", _jsx(_components.a, {\n        href: \"https://mdxjs.com\",\n        children: \"MDX\"\n      }), \" is the most interesting bit so far: it lets you embed React components directly into your Markdown source files.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For example, here I'm embedding a counter react component with \", _jsx(_components.code, {\n        children: \"<Counter />\"\n      }), \":\"]\n    }), \"\\n\", _jsx(Counter, {}), \"\\n\", _jsx(_components.h3, {\n      children: \"Flexibility\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Since this uses Next.js, it also allows me to add dynamic features to the site (via server-side (SSR) or client-side (SPA) rendering). If I end up going that way, I could host it on something like \", _jsx(_components.a, {\n        href: \"https://vercel.com/\",\n        children: \"Vercel\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://www.netlify.com/\",\n        children: \"Netlify\"\n      }), \". Also I'd be lying if I said I wasn't inspired by \", _jsx(_components.a, {\n        href: \"https://brianlovin.com/writing/how-my-website-works\",\n        children: \"Brian Lovin's new website\"\n      }), \", which is a webapp deployed to \", _jsx(_components.a, {\n        href: \"https://vercel.com/\",\n        children: \"Vercel\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Deployment to GitHub Pages\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I have a \", _jsx(_components.a, {\n        href: \"https://github.com/iancanderson/iancanderson.com/blob/509dbad922db3e4daa62844bd826ba5c2d26ada9/.github/workflows/deploy.yml\",\n        children: \"GitHub Actions workflow\"\n      }), \" that deploys the site to GitHub Pages via the \", _jsx(_components.a, {\n        href: \"https://github.com/peaceiris/actions-gh-pages\",\n        children: \"gh-pages\"\n      }), \" action.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Here's what happens when I push to the \", _jsx(_components.code, {\n        children: \"main\"\n      }), \" branch:\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.code, {\n        children: \"next build\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This creates an optimized version of the site in \", _jsx(_components.code, {\n        children: \"./_next/\"\n      })]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.code, {\n        children: \"next export\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This exports the site to static HTML that doesn't need a node server to run.\\nSee the \", _jsxs(_components.a, {\n        href: \"https://github.com/iancanderson/iancanderson.com/tree/gh-pages\",\n        children: [_jsx(_components.code, {\n          children: \"gh-pages\"\n        }), \" branch\"]\n      }), \" on my repo to see the exported site structure\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: _jsx(_components.code, {\n        children: \"peaceiris/actions-gh-pages@v3\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://github.com/peaceiris/actions-gh-pages\",\n        children: \"This action\"\n      }), \" pushes the exported site to \", _jsx(_components.code, {\n        children: \"gh-pages\"\n      }), \", which is the branch that GitHub Pages uses to host the site.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Resources\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I started with the \", _jsx(_components.a, {\n        href: \"https://github.com/vercel/next.js/tree/canary/examples/blog-starter-typescript\",\n        children: \"typescript blog starter\"\n      }), \" example from Next.js, and then I added MDX support using this \", _jsx(_components.a, {\n        href: \"https://nextjs.org/blog/markdown\",\n        children: \"post\"\n      }), \" in this \", _jsx(_components.a, {\n        href: \"https://github.com/iancanderson/iancanderson.com/commit/005090bee69cfeac2df59e90290a558921b41085\",\n        children: \"commit\"\n      }), \", using the \", _jsx(_components.code, {\n        children: \"remark-prism\"\n      }), \" plugin for syntax highlighting.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Check out the code for this site on \", _jsx(_components.a, {\n        href: \"https://github.com/iancanderson/iancanderson.com\",\n        children: \"GitHub\"\n      }), \".\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}