{"pageProps":{"post":{"title":"How to deprecate Ruby methods","date":"2013-02-07T12:00:00.000Z","slug":"how-to-deprecate-ruby-methods","content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    div: \"div\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"I've seen comments like this all too often in rails projects:\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-ruby\",\n        children: _jsxs(_components.code, {\n          className: \"language-ruby\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Thing\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token method-definition\",\n            children: _jsx(_components.span, {\n              className: \"token function\",\n              children: \"method_0\"\n            })\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\\n  \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# These methods shouldn't be used.\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token comment\",\n            children: \"# Let's delete them in the future.\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token method-definition\",\n            children: _jsx(_components.span, {\n              className: \"token function\",\n              children: \"method_1\"\n            })\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token method-definition\",\n            children: _jsx(_components.span, {\n              className: \"token function\",\n              children: \"method_2\"\n            })\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"What's wrong with this?\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The comment may no longer apply if the methods move around or someone accidentally inserts a method in between them.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Deprecated methods blend in with the rest of the class's methods.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Simply wrap these methods inside a module called DeprecatedMethods, then mix it in to the class.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For example:\"\n    }), \"\\n\", _jsx(_components.div, {\n      className: \"remark-highlight\",\n      children: _jsx(_components.pre, {\n        className: \"language-ruby\",\n        children: _jsxs(_components.code, {\n          className: \"language-ruby\",\n          children: [_jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"class\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"Thing\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token method-definition\",\n            children: _jsx(_components.span, {\n              className: \"token function\",\n              children: \"method_0\"\n            })\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"module\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token class-name\",\n            children: \"DeprecatedMethods\"\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token method-definition\",\n            children: _jsx(_components.span, {\n              className: \"token function\",\n              children: \"method_1\"\n            })\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\\n    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"def\"\n          }), \" \", _jsx(_components.span, {\n            className: \"token method-definition\",\n            children: _jsx(_components.span, {\n              className: \"token function\",\n              children: \"method_2\"\n            })\n          }), \"\\n    \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\\n  \", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"include\"\n          }), \" DeprecatedMethods\\n\", _jsx(_components.span, {\n            className: \"token keyword\",\n            children: \"end\"\n          }), \"\\n\"]\n        })\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now the comment isn't really necessary, and the deprecated methods live within\\ntheir own module that's namespaced to the class at hand.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Nothing groundbreaking, I know, but I find it to be an easy win to keep your deprecated methods organized until they're eventually removed.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}